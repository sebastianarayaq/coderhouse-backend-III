paths:
  /api/users:
    get:
      summary: Obtenemos todos los usuarios de la BD
      tags:
        - Users
      responses: 
        "200":
          description: Obtienen todos los usuarios correctamente
          content:
            application/json:
              schema: 
                type: array
                items: 
                  $ref: "#components/schemas/User"
        "500":
          description: Error interno del servidor
    post:
      summary: Este endpoint crea un usuario
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              $ref: "#components/requestBodies/createUser"
      responses: 
        "201":
          description: Usuario creado correctamente
        "500": 
          description: Error en el servidor
  /api/users/{uid}:
    get:
      summary: Obtenemos un solo usuario por ID
      tags: 
        - Users
      parameters:
      - name: uid
        in: path
        required: true
        description: ID del usuario a buscar
        schema: 
          type: string
      responses: 
        "200":
          description: Usuario encontrado
          content:
            application/json:
              schema: 
                $ref: "#components/schemas/User"
        "404":
          description: Usuario no encontrado
    put:
      summary: Actualizamos un usuario por ID
      tags:
        - Users
      parameters:
      - name: uid
        in: path
        required: true
        description: ID del usuario a actualizar
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/requestBodies/updateUser"
      responses:
        "200":
          description: Usuario actualizado correctamente
        "404":
          description: Usuario no encontrado
        "500":
          description: Error en el servidor
    delete:
      summary: Eliminar un usuario por ID
      tags:
        - Users
      parameters:
      - name: uid
        in: path
        required: true
        description: ID del usuario a eliminar
        schema:
          type: string
      responses:
        "200":
          description: Usuario eliminado correctamente
        "404":
          description: Usuario no encontrado
        "500":
          description: Error en el servidor

components: 
  schemas:
    User:
      type: object
      properties:
        _id: 
          type: string
          description: ID autogenerado por MongoDB
        first_name: 
          type: string
          description: Nombre del usuario
        last_name: 
          type: string
          description: Apellido del usuario
        email: 
          type: string
          description: Email del usuario
        role:
          type: string
          description: Rol del usuario (admin/user)
        pets:
          type: array
          items:
            type: object
            description: Mascotas asociadas al usuario
      example:
        _id: "123456"
        first_name: "Tinki"
        last_name: "Winki"
        email: "tinki@winki.com"
        role: "user"
        pets: []

  requestBodies:
    createUser:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        first_name: "Mirtha"
        last_name: "Legrand"
        email: "mirtha@example.com"
        password: "1234"
    updateUser:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        role:
          type: string
        pets:
          type: array
          items:
            type: object
      example:
        first_name: "Mirtha"
        last_name: "Legrand"
        email: "mirtha@update.com"
        role: "admin"
        pets: []
